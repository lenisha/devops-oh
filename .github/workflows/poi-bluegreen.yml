name: POI-BlueGreen

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths: 
      - apis/poi/**  
      - .github/workflows/poi*.yml

env:
  poi_path: apis/poi/**
  staging_url: https://openhack3d68ldn3poi-staging.azurewebsites.net
  prod_url: https://openhack3d68ldn3poi.azurewebsites.net
  resource_group: openhack3d68ldn3rg
  webapp_name: openhack3d68ldn3poi
  build_name: POI
  image_name: openhack3d68ldn3acr.azurecr.io/devopsoh/api-poi
  acr_login_name: openhack3d68ldn3acr.azurecr.io
  
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
   
    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests  /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov

    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj
      
    - uses: nashmaniac/create-issue-action@v1.1
      name: Create Issue Action
      if: failure()
      with:
        title: Build Failed ${{ github.workflow }}
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed ${{ github.workflow }}
        body: "Workflow failed for commit ${{github.sha}} \n Build Number: ${{github.run_number}} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" 
 
       
  acr_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test
    name: ACR Build, Tag, Push
    steps:     
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to ACR Docker
      uses: docker/login-action@v1
      with:
        username: ${{secrets.ACR_USER}}
        password: ${{secrets.ACR_PASSWORD}}
        registry: ${{env.acr_login_name}}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: apis/poi/web
        pull: true
        push: true
        build-args: |
          build_version=${{github.run_number}}
          
        #cache-from: type=registry,ref=lenisha/devops-oh/api-poi:${{github.run_number}}
        #cache-to: type=inline
        tags: ${{env.image_name}}:${{github.run_number}}
        file: apis/poi/web/Dockerfile
        
    - uses: nashmaniac/create-issue-action@v1.1
      name: Create Issue Action
      if: failure()
      with:
        title: Docker Build Failed ${{ github.workflow }}
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed ${{ github.workflow }}
        body: "Workflow failed for commit ${{github.sha}} \n Build Number: ${{github.run_number}} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" 

  deploy_webapp_staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [acr_build_and_push]
    name: Deploy  Web App Staging
    environment: 
      name: staging
      url: ${{env.staging_url}}
    steps:     
    - name: Deploy Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{env.webapp_name}}
        publish-profile: ${{secrets.POI_PROFILE}}
        slot-name: staging
        images: ${{env.image_name}}:${{github.run_number}}
    
  validate_staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy_webapp_staging
    name: Validate Staging API
    steps:
    - uses: actions/checkout@v2

    - name: Web Validate 
      run: |
        # make file runnable, might not be necessary
        chmod +x "$GITHUB_WORKSPACE/.github/workflows/polling-num.sh"

        # run script
        $GITHUB_WORKSPACE/.github/workflows/polling-num.sh -i $staging_url/api/healthcheck/poi 
      
  swap_staging_to_prod:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: validate_staging
    name: Deploy to Prod (swap)
    steps:
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Swap production and staging
      run: |
        az webapp deployment slot swap --name $webapp_name --resource-group $resource_group --slot staging --target-slot production 
 
  rollback_prod:
    if: failure()
    runs-on: ubuntu-latest
    needs: swap_staging_to_prod
    name: Keep Deployment?
    environment: 
      name: production
      url: ${{env.prod_url}}
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Rollback production (swap slots)
      run: |
        az webapp deployment slot swap --name $webapp_name --resource-group $resource_group --slot production --target-slot staging  
 

